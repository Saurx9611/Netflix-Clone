# Generated by Django 5.2.3 on 2025-06-21 07:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'genres',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('release_date', models.DateField()),
                ('duration', models.IntegerField(help_text='Duration in minutes')),
                ('rating', models.CharField(choices=[('G', 'G'), ('PG', 'PG'), ('PG-13', 'PG-13'), ('R', 'R'), ('NC-17', 'NC-17')], max_length=10)),
                ('poster_url', models.URLField(max_length=500)),
                ('backdrop_url', models.URLField(max_length=500)),
                ('trailer_url', models.URLField(blank=True, max_length=500)),
                ('director', models.CharField(max_length=100)),
                ('cast', models.JSONField(default=list, help_text='List of cast members')),
                ('tmdb_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_trending', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('genres', models.ManyToManyField(related_name='movies', to='content.genre')),
            ],
            options={
                'db_table': 'movies',
                'ordering': ['-release_date'],
            },
        ),
        migrations.CreateModel(
            name='TVShow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('first_air_date', models.DateField()),
                ('last_air_date', models.DateField(blank=True, null=True)),
                ('number_of_seasons', models.IntegerField(default=1)),
                ('number_of_episodes', models.IntegerField(default=1)),
                ('rating', models.CharField(choices=[('G', 'G'), ('PG', 'PG'), ('PG-13', 'PG-13'), ('R', 'R'), ('NC-17', 'NC-17')], max_length=10)),
                ('poster_url', models.URLField(max_length=500)),
                ('backdrop_url', models.URLField(max_length=500)),
                ('trailer_url', models.URLField(blank=True, max_length=500)),
                ('creator', models.CharField(max_length=100)),
                ('cast', models.JSONField(default=list, help_text='List of cast members')),
                ('tmdb_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_trending', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('ongoing', 'Ongoing'), ('ended', 'Ended'), ('cancelled', 'Cancelled')], default='ongoing', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('genres', models.ManyToManyField(related_name='tv_shows', to='content.genre')),
            ],
            options={
                'db_table': 'tv_shows',
                'ordering': ['-first_air_date'],
            },
        ),
        migrations.CreateModel(
            name='UserRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('review', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.movie')),
                ('tv_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.tvshow')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_ratings',
                'unique_together': {('user', 'movie'), ('user', 'tv_show')},
            },
        ),
        migrations.CreateModel(
            name='UserWatchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('is_watched', models.BooleanField(default=False)),
                ('watched_at', models.DateTimeField(blank=True, null=True)),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.movie')),
                ('tv_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.tvshow')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_watchlist',
                'unique_together': {('user', 'movie'), ('user', 'tv_show')},
            },
        ),
    ]
